// Generated by CoffeeScript 1.3.1
(function() {
	var faye, http, tulcom, port, server;
	
	http = require('http');
	faye = require('faye');
	tulcom = new faye.NodeAdapter({
		mount: '/msg',
		timeout: '25'
	});
	
	port = process.argv[2] || 3000;
	
	server = http.createServer(function(req, res) {
		res.writeHead(200, {'Content-Type': 'text/plain'});
		res.write('Hello, non-sempoa request');
		return res.end();
	});
	
	tulcom.attach(server);
	server.listen(Number(port));
	
	tulcom.logger = function(message) {
		return console.log(message.msg)
	}; 
	tulcom.getClient().subscribe('/comment', function(message) {
		return console.log('[' + message.nick + ']: ' + message.msg);
	});
	
	tulcom.bind('subscribe', function(clientId, channel) {
		return console.log('[SUBSCRIBE] ' + clientId + ' -> ' + channel);
	});
	tulcom.bind('unsubscribe', function(clientId, channel) {
		return console.log('[UNSUBSCRIBE] ' + clientId + ' -> ' + channel);
	});
	tulcom.bind('publish',function(clientId, channel,data){
		console.log("[publish] - client: '"+clientId+"',channel : '"+channel+"' ");
		console.log("[publish] - data:");
		console.log(data);
	})
	tulcom.bind('disconnect', function(clientId) {
		return console.log('[DISCONNECT] ' + clientId);
	});
	
	
	console.log('Listening on ' + port);

}).call(this);